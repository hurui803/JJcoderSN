MySQL_Master_Slave_Copy

	存放目录：　数据目录　rpm mysql: /var/lib/mysql --------> /mydata/data 
				二进制日志的索引		mysql-bin.index(所有二进制日志的文件名称)
	命名方式：　mysql-bin.XXXXXX

	滚动：
		重启mysqld服务
		mysql> FLUSH LOGS;
		单个文件容量超过1G 

	
	mysql> SHOW BINARY LOGS;			>>>>所有二进制日志的文件名称
	mysql> SHOW MASTER STATUS; 			>>>>查询当前正在使用的二进制日志

	mysql> SHOW BINLOG EVENTS IN "FILE";		>>>显示对应的二进制日志中事件
	
	# mysqlbinlog FILE; 

MySQL主从复制　

MySQL Replication-------MySQL主、从复制

	Master服务器，Slave服务器
	当Master服务器上产生与写操作相关的操作时，Master会在二进制日志文件中记录这些操作，同时Master将二进制日志文件中的内容同步到Slave服务器一份，Slave服务器收到信息时，会保存到自己的二进制日志文件中，再从二进制日志文件中读取相关内容，更新自己中的数据

	Master服务器上的日志称为二进制日志 bin log 
	Slave服务器上的日志称为relay log中继日志

MySQL从服务器上的线程(Thread)：
	I/O Thread
		负责接收master服务器发送的二进制日志事件，并保存到自己中继日志		
	SQL Thread
		负责从中继日志中读取事件，并在从服务器本地执行　


MySQL主从复制的方式：
	
	同步：　master服务器等待slave执行事件的结果，master服务器才会下一个操作
	半同步：　master服务器将二进制日志事件发送给最近的slave服务器;
	MySQL 5.5，借助google的semi插件
	异步：　master在自己的二进制日志文件中记录操作后，开始执行下一个写操作；(默认)

Construct
	master ------ 源码Install(pass)
	slave ------ 源码Install(pass)

准备工作：
	1、selinux、iptables关闭
	2、确保时间同步 # ntpdate -b #ntp_server_address#

Master启动bin-log日志功能：
	# vim /etc/my.cnf
	log_bin=mysql-bin
	log_bin_index=mysql-bin.index
	default_storage_engine=InnoDB

	# service mysqld restart
	# chkconfig mysqld on

	授权：
		# mysql -u root -p
		
		mysql> grant replication slave on *.* to 'repluser'@'#slave-address#' identfied by "redhat";

		mysql> flush privileges;

		mysql> show master status;

Slave启动relay-log日志功能：
	# vim /etc/my.cnf
	relay-log=slave-bin
	relay-log-index=slave-bin.index
	default_storage_engine=InnoDB

	# service mysqld restart
	# chkconfig mysqld on

	授权：
	# mysql -u root -p

	mysql> CHANGE MASTER TO
    -> MASTER_HOST='#master-address#',
    -> MASTER_PORT=3306,
    -> MASTER_USER='repluser',
    -> MASTER_PASSWORD='redhat',
    -> MASTER_LOG_FILE='mysql-bin.000001',
    -> MASTER_LOG_POS=340;

    mysql> start slave;
    mysql> show slave status\G;

Error:
	 Slave_IO_Running: Connecting
    Slave_SQL_Running: Yes

Solve:
	1、# iptables -F ; service iptables stop ; chkconfig iptables off 
	2、# 查看授权的master-address对不对，是否为master的ip-address.
